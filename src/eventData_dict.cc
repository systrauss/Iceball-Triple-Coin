//
// File generated by rootcint at Sat Jan 24 17:38:40 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME eventData_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "eventData_dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void eventData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_eventData(void *p = 0);
   static void *newArray_eventData(Long_t size, void *p);
   static void delete_eventData(void *p);
   static void deleteArray_eventData(void *p);
   static void destruct_eventData(void *p);
   static void streamer_eventData(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::eventData*)
   {
      ::eventData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::eventData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("eventData", ::eventData::Class_Version(), "./eventData.h", 12,
                  typeid(::eventData), DefineBehavior(ptr, ptr),
                  &::eventData::Dictionary, isa_proxy, 0,
                  sizeof(::eventData) );
      instance.SetNew(&new_eventData);
      instance.SetNewArray(&newArray_eventData);
      instance.SetDelete(&delete_eventData);
      instance.SetDeleteArray(&deleteArray_eventData);
      instance.SetDestructor(&destruct_eventData);
      instance.SetStreamerFunc(&streamer_eventData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::eventData*)
   {
      return GenerateInitInstanceLocal((::eventData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::eventData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *eventData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *eventData::Class_Name()
{
   return "eventData";
}

//______________________________________________________________________________
const char *eventData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::eventData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int eventData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::eventData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void eventData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::eventData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *eventData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::eventData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void eventData::Streamer(TBuffer &R__b)
{
   // Stream an object of class eventData.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.ReadStaticArray((unsigned short*)sili_time);
      R__b >> pulser_time;
      R__b.ReadStaticArray((unsigned short*)ge_time);
      R__b >> n1_time;
      R__b >> n2_time;
      R__b >> bgo6_time;
      R__b >> bgo1_time;
      R__b >> bgo5_time;
      R__b >> bgo4_time;
      R__b >> buncher_time;
      R__b.ReadStaticArray((float*)sili_en);
      R__b.ReadStaticArray((unsigned short*)sili_en_raw);
      R__b.ReadStaticArray((unsigned short*)ge_en_raw);
      R__b.ReadStaticArray((float*)ge_en);
      R__b.ReadStaticArray((unsigned short*)n1_en);
      R__b.ReadStaticArray((unsigned short*)n2_en);
      R__b >> pulser_en;
      R__b >> veto_timing_en;
      R__b >> bgo6_en;
      R__b >> bgo5_en;
      R__b >> bgo1_en;
      R__b >> bgo4_en;
      R__b.CheckByteCount(R__s, R__c, eventData::IsA());
   } else {
      R__c = R__b.WriteVersion(eventData::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.WriteArray(sili_time, 6);
      R__b << pulser_time;
      R__b.WriteArray(ge_time, 2);
      R__b << n1_time;
      R__b << n2_time;
      R__b << bgo6_time;
      R__b << bgo1_time;
      R__b << bgo5_time;
      R__b << bgo4_time;
      R__b << buncher_time;
      R__b.WriteArray(sili_en, 6);
      R__b.WriteArray(sili_en_raw, 6);
      R__b.WriteArray(ge_en_raw, 2);
      R__b.WriteArray(ge_en, 2);
      R__b.WriteArray(n1_en, 2);
      R__b.WriteArray(n2_en, 2);
      R__b << pulser_en;
      R__b << veto_timing_en;
      R__b << bgo6_en;
      R__b << bgo5_en;
      R__b << bgo1_en;
      R__b << bgo4_en;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void eventData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class eventData.
      TClass *R__cl = ::eventData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc[32]", tdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sili_time[6]", sili_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pulser_time", &pulser_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ge_time[2]", ge_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n1_time", &n1_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n2_time", &n2_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bgo6_time", &bgo6_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bgo1_time", &bgo1_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bgo5_time", &bgo5_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bgo4_time", &bgo4_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "buncher_time", &buncher_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc[32]", adc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sili_en[6]", sili_en);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sili_en_raw[6]", sili_en_raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ge_en_raw[2]", ge_en_raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ge_en[2]", ge_en);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n1_en[2]", n1_en);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n2_en[2]", n2_en);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pulser_en", &pulser_en);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "veto_timing_en", &veto_timing_en);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bgo6_en", &bgo6_en);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bgo5_en", &bgo5_en);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bgo1_en", &bgo1_en);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bgo4_en", &bgo4_en);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_eventData(void *p) {
      return  p ? new(p) ::eventData : new ::eventData;
   }
   static void *newArray_eventData(Long_t nElements, void *p) {
      return p ? new(p) ::eventData[nElements] : new ::eventData[nElements];
   }
   // Wrapper around operator delete
   static void delete_eventData(void *p) {
      delete ((::eventData*)p);
   }
   static void deleteArray_eventData(void *p) {
      delete [] ((::eventData*)p);
   }
   static void destruct_eventData(void *p) {
      typedef ::eventData current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_eventData(TBuffer &buf, void *obj) {
      ((::eventData*)obj)->::eventData::Streamer(buf);
   }
} // end of namespace ROOT for class ::eventData

/********************************************************
* eventData_dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableeventData_dict();

extern "C" void G__set_cpp_environmenteventData_dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("eventData.h");
  G__cpp_reset_tagtableeventData_dict();
}
#include <new>
extern "C" int G__cpp_dllreveventData_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* eventData */
static int G__eventData_dict_185_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   eventData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new eventData[n];
     } else {
       p = new((void*) gvp) eventData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new eventData;
     } else {
       p = new((void*) gvp) eventData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventData_dictLN_eventData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventData_dict_185_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((eventData*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventData_dict_185_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((eventData*) G__getstructoffset())->SetValue((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventData_dict_185_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((eventData*) G__getstructoffset())->Calibrate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventData_dict_185_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) eventData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventData_dict_185_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) eventData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventData_dict_185_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) eventData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventData_dict_185_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      eventData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventData_dict_185_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((eventData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventData_dict_185_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) eventData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventData_dict_185_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) eventData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventData_dict_185_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) eventData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__eventData_dict_185_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) eventData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__eventData_dict_185_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   eventData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new eventData(*(eventData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__eventData_dictLN_eventData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef eventData G__TeventData;
static int G__eventData_dict_185_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (eventData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((eventData*) (soff+(sizeof(eventData)*i)))->~G__TeventData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (eventData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((eventData*) (soff))->~G__TeventData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__eventData_dict_185_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   eventData* dest = (eventData*) G__getstructoffset();
   *dest = *(eventData*) libp->para[0].ref;
   const eventData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* eventData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunceventData_dict {
 public:
  G__Sizep2memfunceventData_dict(): p(&G__Sizep2memfunceventData_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunceventData_dict::*p)();
};

size_t G__get_sizep2memfunceventData_dict()
{
  G__Sizep2memfunceventData_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceeventData_dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__eventData_dictLN_eventData))) {
     eventData *G__Lderived;
     G__Lderived=(eventData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__eventData_dictLN_eventData),G__get_linked_tagnum(&G__eventData_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableeventData_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__eventData_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__eventData_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventData_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__eventData_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventData_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__eventData_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__eventData_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventData_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__eventData_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__eventData_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* eventData */
static void G__setup_memvareventData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__eventData_dictLN_eventData));
   { eventData *p; p=(eventData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"tdc[32]=",0,"!temporary");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"sili_time[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"pulser_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"ge_time[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"n1_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"n2_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"bgo6_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"bgo1_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"bgo5_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"bgo4_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"buncher_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"adc[32]=",0,"!temporary");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"sili_en[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"sili_en_raw[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"ge_en_raw[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"ge_en[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"n1_en[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"n2_en[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"pulser_en=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"veto_timing_en=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"bgo6_en=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"bgo5_en=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"bgo1_en=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"bgo4_en=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__eventData_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvareventData_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfunceventData(void) {
   /* eventData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__eventData_dictLN_eventData));
   G__memfunc_setup("eventData",924,G__eventData_dict_185_0_1, 105, G__get_linked_tagnum(&G__eventData_dictLN_eventData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__eventData_dict_185_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValue",809,G__eventData_dict_185_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - crate i - - 0 - slot "
"i - - 0 - ch i - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calibrate",903,G__eventData_dict_185_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__eventData_dict_185_0_5, 85, G__get_linked_tagnum(&G__eventData_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&eventData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__eventData_dict_185_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&eventData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__eventData_dict_185_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&eventData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__eventData_dict_185_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&eventData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__eventData_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__eventData_dict_185_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__eventData_dict_185_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&eventData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__eventData_dict_185_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&eventData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__eventData_dict_185_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&eventData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__eventData_dict_185_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&eventData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("eventData", 924, G__eventData_dict_185_0_17, (int) ('i'), G__get_linked_tagnum(&G__eventData_dictLN_eventData), -1, 0, 1, 1, 1, 0, "u 'eventData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~eventData", 1050, G__eventData_dict_185_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__eventData_dict_185_0_19, (int) ('u'), G__get_linked_tagnum(&G__eventData_dictLN_eventData), -1, 1, 1, 1, 1, 0, "u 'eventData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunceventData_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaleventData_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funceventData_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__eventData_dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__eventData_dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__eventData_dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__eventData_dictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__eventData_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__eventData_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__eventData_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__eventData_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__eventData_dictLN_eventData = { "eventData" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableeventData_dict() {
  G__eventData_dictLN_TClass.tagnum = -1 ;
  G__eventData_dictLN_TBuffer.tagnum = -1 ;
  G__eventData_dictLN_TMemberInspector.tagnum = -1 ;
  G__eventData_dictLN_TObject.tagnum = -1 ;
  G__eventData_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__eventData_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__eventData_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__eventData_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__eventData_dictLN_eventData.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableeventData_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__eventData_dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__eventData_dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__eventData_dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__eventData_dictLN_TObject);
   G__get_linked_tagnum_fwd(&G__eventData_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__eventData_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__eventData_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__eventData_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__eventData_dictLN_eventData),sizeof(eventData),-1,28928,(char*)NULL,G__setup_memvareventData,G__setup_memfunceventData);
}
extern "C" void G__cpp_setupeventData_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupeventData_dict()");
  G__set_cpp_environmenteventData_dict();
  G__cpp_setup_tagtableeventData_dict();

  G__cpp_setup_inheritanceeventData_dict();

  G__cpp_setup_typetableeventData_dict();

  G__cpp_setup_memvareventData_dict();

  G__cpp_setup_memfunceventData_dict();
  G__cpp_setup_globaleventData_dict();
  G__cpp_setup_funceventData_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunceventData_dict();
  return;
}
class G__cpp_setup_initeventData_dict {
  public:
    G__cpp_setup_initeventData_dict() { G__add_setup_func("eventData_dict",(G__incsetup)(&G__cpp_setupeventData_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initeventData_dict() { G__remove_setup_func("eventData_dict"); }
};
G__cpp_setup_initeventData_dict G__cpp_setup_initializereventData_dict;

